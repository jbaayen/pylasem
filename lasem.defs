;; -*- scheme -*-
; object definitions ...
(define-object DomNode
  (in-module "Lsm")
  (parent "GObject")
  (c-name "LsmDomNode")
  (gtype-id "LSM_TYPE_DOM_NODE")
)

(define-object DomElement
  (in-module "Lsm")
  (parent "LsmDomNode")
  (c-name "LsmDomElement")
  (gtype-id "LSM_TYPE_DOM_ELEMENT")
)

(define-object DomDocument
  (in-module "Lsm")
  (parent "LsmDomNode")
  (c-name "LsmDomDocument")
  (gtype-id "LSM_TYPE_DOM_DOCUMENT")
)

(define-object DomView
  (in-module "Lsm")
  (parent "GObject")
  (c-name "LsmDomView")
  (gtype-id "LSM_TYPE_DOM_VIEW")
)

(define-object MathmlDocument
  (in-module "Lsm")
  (parent "LsmDomDocument")
  (c-name "LsmMathmlDocument")
  (gtype-id "LSM_TYPE_MATHML_DOCUMENT")
)

(define-object MathmlElement
  (in-module "Lsm")
  (parent "LsmDomElement")
  (c-name "LsmMathmlElement")
  (gtype-id "LSM_TYPE_MATHML_ELEMENT")
)

(define-object MathmlMathElement
  (in-module "Lsm")
  (parent "LsmMathmlElement")
  (c-name "LsmMathmlMathElement")
  (gtype-id "LSM_TYPE_MATHML_MATH_ELEMENT")
)

(define-boxed MathmlStyle
  (in-module "Lsm")
  (c-name "LsmMathmlStyle")
  (gtype-id "LSM_TYPE_MATHML_STYLE")
  (copy-func "lsm_mathml_style_duplicate")
  (release-func "lsm_mathml_style_free")
  (fields
    '("gdouble" "math_size_value")
    '("LsmMathmlDisplay" "display")
	'("gint" "script_level")
	'("gdouble" "script_size_multiplier")
	'("LsmMathmlLength" "script_min_size")
	'("LsmMathmlLength" "very_very_thin_math_space")
	'("LsmMathmlLength" "very_thin_math_space")
	'("LsmMathmlLength" "thin_math_space")
	'("LsmMathmlLength" "medium_math_space")
	'("LsmMathmlLength" "thick_math_space")
	'("LsmMathmlLength" "very_thick_math_space")
	'("LsmMathmlLength" "very_very_thick_math_space")
	'("gdouble" "very_very_thin_math_space_value")
	'("gdouble" "very_thin_math_space_value")
	'("gdouble" "thin_math_space_value")
	'("gdouble" "medium_math_space_value")
	'("gdouble" "thick_math_space_value")
	'("gdouble" "very_thick_math_space_value")
	'("gdouble" "very_very_thick_math_space_value")
	'("gchar*" "math_family")
	'("LsmMathmlVariant" "math_variant")
	'("LsmMathmlLength" "math_size")
	'("LsmMathmlColor" "math_color")
	'("LsmMathmlColor" "math_background")
	'("gboolean" "bevelled")
	'("LsmMathmlLength" "subscript_shift")
	'("LsmMathmlLength" "superscript_shift")
	'("LsmMathmlLength" "line_thickness")
  )
)

(define-boxed MathmlColor
  (in-module "Lsm")
  (c-name "LsmMathmlColor")
  (gtype-id "LSM_TYPE_MATHML_COLOR")
  (fields
	'("gdouble" "red")
    '("gdouble" "green")
    '("gdouble" "blue")
    '("gdouble" "alpha")
  )
)

(define-boxed MathmlLength
  (in-module "Lsm")
  (c-name "LsmMathmlLength")
  (gtype-id "LSM_TYPE_MATHML_LENGTH")
  (fields
	'("gdouble" "value")
    '("LsmMathmlUnit" "unit")
  )
)

(define-boxed MathmlSpace
  (in-module "Lsm")
  (c-name "LsmMathmlSpace")
  (gtype-id "LSM_TYPE_MATHML_SPACE")
  (fields
	'("LsmMathmlSpaceName" "name")
    '("LsmMathmlLength" "length")
  )
)

(define-boxed MathmlSpaceList
  (in-module "Lsm")
  (c-name "LsmMathmlSpaceList")
  (gtype-id "LSM_TYPE_MATHML_SPACE_LIST")
  (copy-func "lsm_mathml_space_list_duplicate")
  (release-func "lsm_mathml_space_list_free")
  (fields
	'("guint" "n_spaces")
    '("LsmMathmlSpace*" "spaces")
  )
)

;; Enumerations and flags ...

(define-enum MathmlMode
  (in-module "Lsm")
  (c-name "LsmMathmlMode")
  (gtype-id "LSM_TYPE_MATHML_MODE")
  (values
    '("display" "LSM_MATHML_MODE_DISPLAY")
    '("inline" "LSM_MATHML_MODE_INLINE")
  )
)

(define-enum MathmlDisplay
  (in-module "Lsm")
  (c-name "LsmMathmlDisplay")
  (gtype-id "LSM_TYPE_MATHML_DISPLAY")
  (values
    '("block" "LSM_MATHML_DISPLAY_BLOCK")
    '("inline" "LSM_MATHML_DISPLAY_INLINE")
  )
)

(define-enum MathmlSpaceName
  (in-module "Lsm")
  (c-name "LsmMathmlSpaceName")
  (gtype-id "LSM_TYPE_MATHML_SPACE_NAME")
  (values
    '("error" "LSM_MATHML_SPACE_NAME_ERROR")
    '("very-very-thin" "LSM_MATHML_SPACE_NAME_VERY_VERY_THIN")
    '("very-thin" "LSM_MATHML_SPACE_NAME_VERY_THIN")
    '("thin" "LSM_MATHML_SPACE_NAME_THIN")
    '("medium" "LSM_MATHML_SPACE_NAME_MEDIUM")
    '("thick" "LSM_MATHML_SPACE_NAME_THICK")
    '("very-thick" "LSM_MATHML_SPACE_NAME_VERY_THICK")
    '("very-very-thick" "LSM_MATHML_SPACE_NAME_VERY_VERY_THICK")
    '("infinity" "LSM_MATHML_SPACE_NAME_INFINITY")
  )
)

(define-enum MathmlUnit
  (in-module "Lsm")
  (c-name "LsmMathmlUnit")
  (gtype-id "LSM_TYPE_MATHML_UNIT")
  (values
    '("none" "LSM_MATHML_UNIT_NONE")
    '("em" "LSM_MATHML_UNIT_EM")
    '("ex" "LSM_MATHML_UNIT_EX")
    '("in" "LSM_MATHML_UNIT_IN")
    '("cm" "LSM_MATHML_UNIT_CM")
    '("mm" "LSM_MATHML_UNIT_MM")
    '("pt" "LSM_MATHML_UNIT_PT")
    '("px" "LSM_MATHML_UNIT_PX")
    '("pc" "LSM_MATHML_UNIT_PC")
    '("percent" "LSM_MATHML_UNIT_PERCENT")
  )
)

(define-enum MathmlFontStyle
  (in-module "Lsm")
  (c-name "LsmMathmlFontStyle")
  (gtype-id "LSM_TYPE_MATHML_FONT_STYLE")
  (values
    '("normal" "LSM_MATHML_FONT_STYLE_NORMAL")
    '("italic" "LSM_MATHML_FONT_STYLE_ITALIC")
    '("error" "LSM_MATHML_FONT_STYLE_ERROR")
  )
)

(define-enum MathmlFontWeight
  (in-module "Lsm")
  (c-name "LsmMathmlFontWeight")
  (gtype-id "LSM_TYPE_MATHML_FONT_WEIGHT")
  (values
    '("normal" "LSM_MATHML_FONT_WEIGHT_NORMAL")
    '("bold" "LSM_MATHML_FONT_WEIGHT_BOLD")
    '("error" "LSM_MATHML_FONT_WEIGHT_ERROR")
  )
)

(define-enum MathmlVariant
  (in-module "Lsm")
  (c-name "LsmMathmlVariant")
  (gtype-id "LSM_TYPE_MATHML_VARIANT")
  (values
    '("normal" "LSM_MATHML_VARIANT_NORMAL")
    '("bold" "LSM_MATHML_VARIANT_BOLD")
    '("italic" "LSM_MATHML_VARIANT_ITALIC")
    '("bold-italic" "LSM_MATHML_VARIANT_BOLD_ITALIC")
    '("double-struck" "LSM_MATHML_VARIANT_DOUBLE_STRUCK")
    '("fraktur-bold" "LSM_MATHML_VARIANT_FRAKTUR_BOLD")
    '("script" "LSM_MATHML_VARIANT_SCRIPT")
    '("script-bold" "LSM_MATHML_VARIANT_SCRIPT_BOLD")
    '("fraktur" "LSM_MATHML_VARIANT_FRAKTUR")
    '("sans-serif" "LSM_MATHML_VARIANT_SANS_SERIF")
    '("sans-serif-bold" "LSM_MATHML_VARIANT_SANS_SERIF_BOLD")
    '("sans-serif-italic" "LSM_MATHML_VARIANT_SANS_SERIF_ITALIC")
    '("sans-serif-bold-italic" "LSM_MATHML_VARIANT_SANS_SERIF_BOLD_ITALIC")
    '("monospace" "LSM_MATHML_VARIANT_MONOSPACE")
    '("error" "LSM_MATHML_VARIANT_ERROR")
  )
)

(define-enum MathmlForm
  (in-module "Lsm")
  (c-name "LsmMathmlForm")
  (gtype-id "LSM_TYPE_MATHML_FORM")
  (values
    '("prefix" "LSM_MATHML_FORM_PREFIX")
    '("postfix" "LSM_MATHML_FORM_POSTFIX")
    '("infix" "LSM_MATHML_FORM_INFIX")
    '("error" "LSM_MATHML_FORM_ERROR")
  )
)

(define-enum MathmlRowAlign
  (in-module "Lsm")
  (c-name "LsmMathmlRowAlign")
  (gtype-id "LSM_TYPE_MATHML_ROW_ALIGN")
  (values
    '("baseline" "LSM_MATHML_ROW_ALIGN_BASELINE")
    '("top" "LSM_MATHML_ROW_ALIGN_TOP")
    '("bottom" "LSM_MATHML_ROW_ALIGN_BOTTOM")
    '("center" "LSM_MATHML_ROW_ALIGN_CENTER")
    '("axis" "LSM_MATHML_ROW_ALIGN_AXIS")
    '("error" "LSM_MATHML_ROW_ALIGN_ERROR")
  )
)

(define-enum MathmlColumnAlign
  (in-module "Lsm")
  (c-name "LsmMathmlColumnAlign")
  (gtype-id "LSM_TYPE_MATHML_COLUMN_ALIGN")
  (values
    '("center" "LSM_MATHML_COLUMN_ALIGN_CENTER")
    '("left" "LSM_MATHML_COLUMN_ALIGN_LEFT")
    '("right" "LSM_MATHML_COLUMN_ALIGN_RIGHT")
  )
)

(define-enum MathmlLine
  (in-module "Lsm")
  (c-name "LsmMathmlLine")
  (gtype-id "LSM_TYPE_MATHML_LINE")
  (values
    '("none" "LSM_MATHML_LINE_NONE")
    '("solid" "LSM_MATHML_LINE_SOLID")
    '("dashed" "LSM_MATHML_LINE_DASHED")
  )
)

(define-enum DomNodeType
  (in-module "Lsm")
  (c-name "LsmDomNodeType")
  (gtype-id "LSM_TYPE_DOM_NODE_TYPE")
  (values
    '("element-node" "LSM_DOM_NODE_TYPE_ELEMENT_NODE")
    '("attribute-node" "LSM_DOM_NODE_TYPE_ATTRIBUTE_NODE")
    '("text-node" "LSM_DOM_NODE_TYPE_TEXT_NODE")
    '("cdata-section-node" "LSM_DOM_NODE_TYPE_CDATA_SECTION_NODE")
    '("entity-reference-node" "LSM_DOM_NODE_TYPE_ENTITY_REFERENCE_NODE")
    '("entity-node" "LSM_DOM_NODE_TYPE_ENTITY_NODE")
    '("processing-instruction-node" "LSM_DOM_NODE_TYPE_PROCESSING_INSTRUCTION_NODE")
    '("comment-node" "LSM_DOM_NODE_TYPE_COMMENT_NODE")
    '("document-node" "LSM_DOM_NODE_TYPE_DOCUMENT_NODE")
    '("document-type-node" "LSM_DOM_NODE_TYPE_DOCUMENT_TYPE_NODE")
    '("document-fragment-node" "LSM_DOM_NODE_TYPE_DOCUMENT_FRAGMENT_NODE")
    '("notation-node" "LSM_DOM_NODE_TYPE_NOTATION_NODE")
  )
)

(define-enum DomDocumentError
  (in-module "Lsm")
  (c-name "LsmDomDocumentError")
  (gtype-id "LSM_TYPE_DOM_DOCUMENT_ERROR")
  (values
    '("xml" "LSM_DOM_DOCUMENT_ERROR_INVALID_XML")
  )
)


;; From lsmmathmlenums.h

(define-method to_string
  (of-object "LsmMathmlMode")
  (c-name "lsm_mathml_mode_to_string")
  (return-type "const-char*")
)

(define-function mathml_mode_from_string
  (c-name "lsm_mathml_mode_from_string")
  (return-type "LsmMathmlMode")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "LsmMathmlDisplay")
  (c-name "lsm_mathml_display_to_string")
  (return-type "const-char*")
)

(define-function mathml_display_from_string
  (c-name "lsm_mathml_display_from_string")
  (return-type "LsmMathmlDisplay")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "LsmMathmlSpaceName")
  (c-name "lsm_mathml_space_name_to_string")
  (return-type "const-char*")
)

(define-function mathml_space_name_from_string
  (c-name "lsm_mathml_space_name_from_string")
  (return-type "LsmMathmlSpaceName")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "LsmMathmlUnit")
  (c-name "lsm_mathml_unit_to_string")
  (return-type "const-char*")
)

(define-function mathml_unit_from_string
  (c-name "lsm_mathml_unit_from_string")
  (return-type "LsmMathmlUnit")
  (parameters
    '("const-char*" "string")
  )
)

(define-function mathml_font_style_from_string
  (c-name "lsm_mathml_font_style_from_string")
  (return-type "LsmMathmlFontStyle")
  (parameters
    '("const-char*" "string")
  )
)

(define-function mathml_font_weight_from_string
  (c-name "lsm_mathml_font_weight_from_string")
  (return-type "LsmMathmlFontWeight")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "LsmMathmlVariant")
  (c-name "lsm_mathml_variant_to_string")
  (return-type "const-char*")
)

(define-function mathml_variant_from_string
  (c-name "lsm_mathml_variant_from_string")
  (return-type "LsmMathmlVariant")
  (parameters
    '("const-char*" "string")
  )
)

(define-method set_font_style
  (of-object "LsmMathmlVariant")
  (c-name "lsm_mathml_variant_set_font_style")
  (return-type "none")
  (parameters
    '("LsmMathmlFontStyle" "style")
  )
)

(define-method set_font_weight
  (of-object "LsmMathmlVariant")
  (c-name "lsm_mathml_variant_set_font_weight")
  (return-type "none")
  (parameters
    '("LsmMathmlFontWeight" "weight")
  )
)

(define-method to_string
  (of-object "LsmMathmlForm")
  (c-name "lsm_mathml_form_to_string")
  (return-type "const-char*")
)

(define-function mathml_form_from_string
  (c-name "lsm_mathml_form_from_string")
  (return-type "LsmMathmlForm")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "LsmMathmlRowAlign")
  (c-name "lsm_mathml_row_align_to_string")
  (return-type "const-char*")
)

(define-function mathml_row_align_from_string
  (c-name "lsm_mathml_row_align_from_string")
  (return-type "LsmMathmlRowAlign")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "LsmMathmlColumnAlign")
  (c-name "lsm_mathml_column_align_to_string")
  (return-type "const-char*")
)

(define-function mathml_column_align_from_string
  (c-name "lsm_mathml_column_align_from_string")
  (return-type "LsmMathmlColumnAlign")
  (parameters
    '("const-char*" "string")
  )
)

(define-method to_string
  (of-object "LsmMathmlLine")
  (c-name "lsm_mathml_line_to_string")
  (return-type "const-char*")
)

(define-function mathml_line_from_string
  (c-name "lsm_mathml_line_from_string")
  (return-type "LsmMathmlLine")
  (parameters
    '("const-char*" "string")
  )
)



;; From lsmmathml.h



;; From lsmdomnode.h

(define-function lsm_dom_node_get_type
  (c-name "lsm_dom_node_get_type")
  (return-type "GType")
)

(define-method get_node_name
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_node_name")
  (return-type "const-char*")
)

(define-method get_node_value
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_node_value")
  (return-type "const-char*")
)

(define-method set_node_value
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_set_node_value")
  (return-type "none")
  (parameters
    '("const-char*" "new_value")
  )
)

(define-method get_node_type
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_node_type")
  (return-type "LsmDomNodeType")
)

(define-method get_parent_node
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_parent_node")
  (return-type "LsmDomNode*")
)

(define-method get_child_nodes
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_child_nodes")
  (return-type "LsmDomNodeList*")
)

(define-method get_first_child
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_first_child")
  (return-type "LsmDomNode*")
)

(define-method get_last_child
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_last_child")
  (return-type "LsmDomNode*")
)

(define-method get_previous_sibling
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_previous_sibling")
  (return-type "LsmDomNode*")
)

(define-method get_next_sibling
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_next_sibling")
  (return-type "LsmDomNode*")
)

(define-method get_attributes
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_attributes")
  (return-type "LsmDomNamedNodeMap*")
)

(define-method insert_before
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_insert_before")
  (return-type "LsmDomNode*")
  (parameters
    '("LsmDomNode*" "new_child")
    '("LsmDomNode*" "ref_child")
  )
)

(define-method replace_child
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_replace_child")
  (return-type "LsmDomNode*")
  (parameters
    '("LsmDomNode*" "new_child")
    '("LsmDomNode*" "old_child")
  )
)

(define-method append_child
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_append_child")
  (return-type "LsmDomNode*")
  (parameters
    '("LsmDomNode*" "new_child")
  )
)

(define-method remove_child
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_remove_child")
  (return-type "LsmDomNode*")
  (parameters
    '("LsmDomNode*" "old_child")
  )
)

(define-method has_child_nodes
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_has_child_nodes")
  (return-type "gboolean")
)

(define-method changed
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_changed")
  (return-type "none")
)

(define-method get_owner_document
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_get_owner_document")
  (return-type "LsmDomDocument*")
)

(define-method dump
  (of-object "LsmDomNode")
  (c-name "lsm_dom_node_dump")
  (return-type "none")
)



;; From lsmdomdocument.h

(define-function lsm_dom_document_get_type
  (c-name "lsm_dom_document_get_type")
  (return-type "GType")
)

(define-method get_document_element
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_get_document_element")
  (return-type "LsmDomElement*")
)

(define-method create_element
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_create_element")
  (return-type "LsmDomElement*")
  (parameters
    '("const-char*" "tag_name")
  )
)

(define-method create_text_node
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_create_text_node")
  (return-type "LsmDomText*")
  (parameters
    '("const-char*" "data")
  )
)

(define-method get_element_by_id
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_get_element_by_id")
  (return-type "LsmDomElement*")
  (parameters
    '("const-char*" "id")
  )
)

(define-method register_element
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_register_element")
  (return-type "none")
  (parameters
    '("LsmDomElement*" "element")
    '("const-char*" "id")
  )
)

(define-method create_view
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_create_view")
  (return-type "LsmDomView*")
)

(define-method get_resolution
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_get_resolution")
  (return-type "double")
)

(define-method set_resolution
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_set_resolution")
  (return-type "none")
  (parameters
    '("double" "ppi")
  )
)

(define-method set_viewport
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_set_viewport")
  (return-type "none")
  (parameters
    '("const-LsmBox*" "viewport")
  )
)

(define-method set_viewport_px
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_set_viewport_px")
  (return-type "none")
  (parameters
    '("const-LsmBox*" "viewport")
  )
)

(define-method get_viewport
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_get_viewport")
  (return-type "LsmBox")
)

(define-method get_viewport_px
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_get_viewport_px")
  (return-type "LsmBox")
)

(define-method get_url
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_get_url")
  (return-type "const-char*")
)

(define-method set_url
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_set_url")
  (return-type "none")
  (parameters
    '("const-char*" "url")
  )
)

(define-method set_path
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_set_path")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method get_href_data
  (of-object "LsmDomDocument")
  (c-name "lsm_dom_document_get_href_data")
  (return-type "void*")
  (parameters
    '("const-char*" "href")
    '("gsize*" "size")
  )
)



;; From lsmdomelement.h

(define-function lsm_dom_element_get_type
  (c-name "lsm_dom_element_get_type")
  (return-type "GType")
)

(define-method get_attribute
  (of-object "LsmDomElement")
  (c-name "lsm_dom_element_get_attribute")
  (return-type "const-char*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method set_attribute
  (of-object "LsmDomElement")
  (c-name "lsm_dom_element_set_attribute")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("const-char*" "attribute_value")
  )
)



;; From lsmmathmlattributes.h

(define-function lsm_mathml_color_get_type
  (c-name "lsm_mathml_color_get_type")
  (return-type "GType")
)

(define-function lsm_mathml_length_get_type
  (c-name "lsm_mathml_length_get_type")
  (return-type "GType")
)

(define-function lsm_mathml_space_get_type
  (c-name "lsm_mathml_space_get_type")
  (return-type "GType")
)

(define-function lsm_mathml_space_list_get_type
  (c-name "lsm_mathml_space_list_get_type")
  (return-type "GType")
)

(define-method compute
  (of-object "LsmMathmlLength")
  (c-name "lsm_mathml_length_compute")
  (return-type "double")
  (parameters
    '("double" "default_value")
    '("double" "font_size")
  )
)

(define-method parse
  (of-object "LsmMathmlScriptLevelAttribute")
  (c-name "lsm_mathml_script_level_attribute_parse")
  (return-type "none")
  (parameters
    '("int*" "default_value")
  )
)

(define-function mathml_mode_attribute_parse
  (c-name "lsm_mathml_mode_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumAttribute*" "attribute")
    '("unsigned-int*" "style_value")
  )
)

(define-function mathml_display_attribute_parse
  (c-name "lsm_mathml_display_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumAttribute*" "attribute")
    '("unsigned-int*" "style_value")
  )
)

(define-function mathml_form_attribute_parse
  (c-name "lsm_mathml_form_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumAttribute*" "attribute")
    '("unsigned-int*" "style_value")
  )
)

(define-function mathml_font_style_attribute_parse
  (c-name "lsm_mathml_font_style_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumAttribute*" "attribute")
    '("unsigned-int*" "style_value")
  )
)

(define-function mathml_font_weight_attribute_parse
  (c-name "lsm_mathml_font_weight_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumAttribute*" "attribute")
    '("unsigned-int*" "style_value")
  )
)

(define-function mathml_variant_attribute_parse
  (c-name "lsm_mathml_variant_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumAttribute*" "attribute")
    '("unsigned-int*" "style_value")
  )
)

(define-function mathml_line_attribute_parse
  (c-name "lsm_mathml_line_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumAttribute*" "attribute")
    '("unsigned-int*" "style_value")
  )
)

(define-method parse
  (of-object "LsmMathmlColorAttribute")
  (c-name "lsm_mathml_color_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmMathmlColor*" "default_color")
  )
)

(define-method parse
  (of-object "LsmMathmlLengthAttribute")
  (c-name "lsm_mathml_length_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmMathmlLength*" "style_value")
    '("double" "font_size")
  )
)

(define-method parse
  (of-object "LsmMathmlSpaceAttribute")
  (c-name "lsm_mathml_space_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmMathmlSpace*" "style_value")
    '("LsmMathmlStyle*" "style")
  )
)

(define-function lsm_mathml_space_list_new
  (c-name "lsm_mathml_space_list_new")
  (is-constructor-of "LsmMathmlSpaceList")
  (return-type "LsmMathmlSpaceList*")
  (parameters
    '("unsigned-int" "n_spaces")
  )
)

(define-method free
  (of-object "LsmMathmlSpaceList")
  (c-name "lsm_mathml_space_list_free")
  (return-type "none")
)

(define-method duplicate
  (of-object "LsmMathmlSpaceList")
  (c-name "lsm_mathml_space_list_duplicate")
  (return-type "LsmMathmlSpaceList*")
)

(define-method parse
  (of-object "LsmMathmlSpaceListAttribute")
  (c-name "lsm_mathml_space_list_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmMathmlSpaceList*" "style_value")
    '("const-LsmMathmlStyle*" "style")
  )
)

(define-function mathml_row_align_list_attribute_parse
  (c-name "lsm_mathml_row_align_list_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumListAttribute*" "attribute")
    '("LsmDomEnumList*" "style_value")
  )
)

(define-function mathml_column_align_list_attribute_parse
  (c-name "lsm_mathml_column_align_list_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumListAttribute*" "attribute")
    '("LsmDomEnumList*" "style_value")
  )
)

(define-function mathml_line_list_attribute_parse
  (c-name "lsm_mathml_line_list_attribute_parse")
  (return-type "none")
  (parameters
    '("LsmDomEnumListAttribute*" "attribute")
    '("LsmDomEnumList*" "style_value")
  )
)

(define-method add_space_list
  (of-object "LsmDomAttributeMap")
  (c-name "lsm_dom_attribute_map_add_space_list")
  (return-type "none")
  (parameters
    '("char-const*" "name")
    '("ptrdiff_t" "offset")
  )
)



;; From lsmdomview.h

(define-function lsm_dom_view_get_type
  (c-name "lsm_dom_view_get_type")
  (return-type "GType")
)

(define-method render
  (of-object "LsmDomView")
  (c-name "lsm_dom_view_render")
  (return-type "none")
  (parameters
    '("double" "x")
    '("double" "y")
  )
)

(define-method get_size
  (of-object "LsmDomView")
  (c-name "lsm_dom_view_get_size")
  (return-type "none")
  (parameters
    '("double*" "width")
    '("double*" "height")
  )
)

(define-method get_size_pixels
  (of-object "LsmDomView")
  (c-name "lsm_dom_view_get_size_pixels")
  (return-type "none")
  (parameters
    '("unsigned-int*" "width")
    '("unsigned-int*" "height")
  )
)

(define-method set_document
  (of-object "LsmDomView")
  (c-name "lsm_dom_view_set_document")
  (return-type "none")
  (parameters
    '("LsmDomDocument*" "document")
  )
)

(define-method set_cairo
  (of-object "LsmDomView")
  (c-name "lsm_dom_view_set_cairo")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
  )
)

(define-method set_debug
  (of-object "LsmDomView")
  (c-name "lsm_dom_view_set_debug")
  (return-type "none")
  (parameters
    '("gboolean" "debug")
  )
)



;; From lsmdomparser.h

(define-function dom_document_new_from_memory
  (c-name "lsm_dom_document_new_from_memory")
  (return-type "LsmDomDocument*")
  (parameters
    '("const-char*" "buffer")
    '("int" "size")
    '("GError**" "error")
  )
)

(define-function dom_document_new_from_path
  (c-name "lsm_dom_document_new_from_path")
  (return-type "LsmDomDocument*")
  (parameters
    '("const-char*" "path")
    '("GError*" "error")
  )
)

(define-function dom_document_new_from_url
  (c-name "lsm_dom_document_new_from_url")
  (return-type "LsmDomDocument*")
  (parameters
    '("const-char*" "url")
    '("GError*" "error")
  )
)



;; From lsmmathmldocument.h

(define-function lsm_mathml_document_get_type
  (c-name "lsm_mathml_document_get_type")
  (return-type "GType")
)

(define-function lsm_mathml_document_new
  (c-name "lsm_mathml_document_new")
  (is-constructor-of "LsmMathmlDocument")
  (return-type "LsmMathmlDocument*")
)

(define-method get_root_element
  (of-object "LsmMathmlDocument")
  (c-name "lsm_mathml_document_get_root_element")
  (return-type "LsmMathmlMathElement*")
)

(define-function mathml_document_new_from_itex
  (c-name "lsm_mathml_document_new_from_itex")
  (return-type "LsmMathmlDocument*")
  (parameters
    '("const-char*" "itex")
    '("int" "size")
    '("GError**" "error")
  )
)

(define-function mathml_document_new_from_itex_path
  (c-name "lsm_mathml_document_new_from_itex_path")
  (return-type "LsmMathmlDocument*")
  (parameters
    '("const-char*" "url")
    '("GError**" "error")
  )
)

(define-function mathml_document_new_from_itex_url
  (c-name "lsm_mathml_document_new_from_itex_url")
  (return-type "LsmMathmlDocument*")
  (parameters
    '("const-char*" "url")
    '("GError**" "error")
  )
)



;; From lsmmathmlelement.h

(define-function lsm_mathml_element_get_type
  (c-name "lsm_mathml_element_get_type")
  (return-type "GType")
)

(define-method update
  (of-object "LsmMathmlElement")
  (c-name "lsm_mathml_element_update")
  (return-type "gboolean")
  (parameters
    '("const-LsmMathmlStyle*" "style")
  )
)

(define-method measure
  (of-object "LsmMathmlElement")
  (c-name "lsm_mathml_element_measure")
  (return-type "const-LsmMathmlBbox*")
  (parameters
    '("LsmMathmlView*" "view")
    '("const-LsmMathmlBbox*" "stretch_bbox")
  )
)

(define-method layout
  (of-object "LsmMathmlElement")
  (c-name "lsm_mathml_element_layout")
  (return-type "none")
  (parameters
    '("LsmMathmlView*" "view")
    '("double" "x")
    '("double" "y")
    '("const-LsmMathmlBbox*" "bbox")
  )
)

(define-method render
  (of-object "LsmMathmlElement")
  (c-name "lsm_mathml_element_render")
  (return-type "none")
  (parameters
    '("LsmMathmlView*" "view")
  )
)

(define-method get_embellished_core
  (of-object "LsmMathmlElement")
  (c-name "lsm_mathml_element_get_embellished_core")
  (return-type "LsmMathmlOperatorElement*")
)

(define-method get_bbox
  (of-object "LsmMathmlElement")
  (c-name "lsm_mathml_element_get_bbox")
  (return-type "const-LsmMathmlBbox*")
)

(define-method is_inferred_row
  (of-object "LsmMathmlElement")
  (c-name "lsm_mathml_element_is_inferred_row")
  (return-type "gboolean")
)



;; From lsmmathmlstyle.h

(define-function lsm_mathml_style_get_type
  (c-name "lsm_mathml_style_get_type")
  (return-type "GType")
)

(define-function lsm_mathml_style_new
  (c-name "lsm_mathml_style_new")
  (is-constructor-of "LsmMathmlStyle")
  (return-type "LsmMathmlStyle*")
)

(define-method free
  (of-object "LsmMathmlStyle")
  (c-name "lsm_mathml_style_free")
  (return-type "none")
)

(define-method duplicate
  (of-object "LsmMathmlStyle")
  (c-name "lsm_mathml_style_duplicate")
  (return-type "LsmMathmlStyle*")
)

(define-method change_script_level
  (of-object "LsmMathmlStyle")
  (c-name "lsm_mathml_style_change_script_level")
  (return-type "none")
  (parameters
    '("int" "increment")
  )
)

(define-method set_math_size_pt
  (of-object "LsmMathmlStyle")
  (c-name "lsm_mathml_style_set_math_size_pt")
  (return-type "none")
  (parameters
    '("double" "math_size")
  )
)

(define-method set_math_family
  (of-object "LsmMathmlStyle")
  (c-name "lsm_mathml_style_set_math_family")
  (return-type "none")
  (parameters
    '("const-char*" "math_family")
  )
)

(define-method set_math_variant
  (of-object "LsmMathmlStyle")
  (c-name "lsm_mathml_style_set_math_variant")
  (return-type "none")
  (parameters
    '("LsmMathmlVariant" "math_variant")
  )
)

(define-method set_math_color
  (of-object "LsmMathmlStyle")
  (c-name "lsm_mathml_style_set_math_color")
  (return-type "none")
  (parameters
    '("double" "red")
    '("double" "green")
    '("double" "blue")
    '("double" "alpha")
  )
)



;; From lsmmathmlmathelement.h

(define-function lsm_mathml_math_element_get_type
  (c-name "lsm_mathml_math_element_get_type")
  (return-type "GType")
)

(define-function lsm_mathml_math_element_new
  (c-name "lsm_mathml_math_element_new")
  (is-constructor-of "LsmMathmlMathElement")
  (return-type "LsmDomNode*")
)

(define-method get_default_style
  (of-object "LsmMathmlMathElement")
  (c-name "lsm_mathml_math_element_get_default_style")
  (return-type "LsmMathmlStyle*")
)

(define-method set_default_style
  (of-object "LsmMathmlMathElement")
  (c-name "lsm_mathml_math_element_set_default_style")
  (return-type "none")
  (parameters
    '("LsmMathmlStyle*" "style")
  )
)

(define-method update
  (of-object "LsmMathmlMathElement")
  (c-name "lsm_mathml_math_element_update")
  (return-type "none")
)

(define-method measure
  (of-object "LsmMathmlMathElement")
  (c-name "lsm_mathml_math_element_measure")
  (return-type "const-LsmMathmlBbox*")
  (parameters
    '("LsmMathmlView*" "view")
  )
)

(define-method layout
  (of-object "LsmMathmlMathElement")
  (c-name "lsm_mathml_math_element_layout")
  (return-type "none")
  (parameters
    '("LsmMathmlView*" "view")
    '("const-LsmMathmlBbox*" "bbox")
  )
)

(define-method render
  (of-object "LsmMathmlMathElement")
  (c-name "lsm_mathml_math_element_render")
  (return-type "none")
  (parameters
    '("LsmMathmlView*" "view")
  )
)
